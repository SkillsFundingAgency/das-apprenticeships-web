@using SFA.DAS.Apprenticeships.Web.Models.ChangeOfPrice
@model EmployerViewPendingPriceChangeModel
@{
    ViewData["Title"] = "View change request - Manage apprenticeships";
}

<div class="govuk-width-container ">
    
    <a class="govuk-back-link" href="@Model.BackLinkUrl" id="backLink">
        Back
    </a>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l" id="reviewChangesHeader">Review changes</h1>
            <h2 class="govuk-heading-m" id="providerRequestedChangesHeader">@Model.ProviderName has requested these changes</h2>

            @await Html.PartialAsync("~/Views/ChangeOfPrice/_pendingSummary.cshtml", Model, new ViewDataDictionary(ViewData) { { "ShowAllPriceDetails", false } })
            
            <form method="post" action="/employer/@Model.EmployerAccountId/ChangeOfPrice/@Model.ApprenticeshipHashedId/pending">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.CacheKey)
                <div class="govuk-form-group">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Do you want to approve these changes?
                    </legend>

                    <div class="govuk-radios @ViewContext.DisplayFormGroupError(nameof(Model.ApproveChanges))">

                        <component type="typeof(RadioOptionComponent)" render-mode="Static"
                                   param-Id='"option-yes"'
                                   param-name='"ApproveChanges"'
                                   param-Value='"1"'
                                   param-onchange='"javascript: showHideRejectReason();"'
                                   param-Label='"Yes, approve these changes"' />

                        <component type="typeof(RadioOptionComponent)" render-mode="Static"
                                   param-Id='"option-no"'
                                   param-name='"ApproveChanges"'
                                   param-Value='"0"'
                                   param-onchange='"javascript: showHideRejectReason();"'
                                   param-Label='"No, reject these changes"' />
                        @Html.ValidationMessageFor(m => m.ApproveChanges, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ApproveChanges) })
                    </div>
                    
                    <div id="rejectReasonContainer">
                        <fieldset class="govuk-fieldset" role="group" aria-describedby="ReasonForChangeOfPriceRejection-hint">
                            <br/>
                            <div>
                                <div class="govuk-form-group" id="ReasonForChangeOfPriceRejectionGroup">
                                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--s" for="ReasonForChangeOfPriceRejection">
                                        Why do you want to reject these changes?
                                    </legend>
                                    @Html.TextAreaFor(m => m.RejectReason, new {@class = $"govuk-textarea", rows = "5", aria_describedby = "reason-for-rejection-hint"})
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
                <button class="govuk-button" data-module="govuk-button" type="submit" id="buttonSubmitForm">
                    Send
                </button>
            </form>
        </div>
    </div>
</div>

<script type="text/javascript">
    function showHideRejectReason() {
        console.log(document.getElementById("option-no").checked);
        if (!document.getElementById("option-no").checked) {
            document.getElementById("rejectReasonContainer").style.display = "none";
        } else {
            document.getElementById("rejectReasonContainer").style.display = "block";
        }
    }

    showHideRejectReason();
</script>