@using SFA.DAS.Apprenticeships.Web.Models.ChangeOfPrice
@model ProviderConfirmPriceBreakdownPriceChangeModel
@{
    ViewData["Title"] = "Confirm new training and end-point assessment price - Manage apprenticeships";
}

<div class="govuk-width-container ">

    @*Renders href as href="https://approvals.{domain}/{ProviderReferenceNumber}/apprentices/{ApprenticeshipHashedId}" *@
    <a class="govuk-back-link" asp-external-subdomain="approvals" asp-external-id="@Model.ProviderReferenceNumber" asp-external-controller="apprentices" asp-external-action="@Model.ApprenticeshipHashedId">
        Back
    </a>

	<div class="govuk-grid-row">
		<div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-l">Confirm new training and end-point assessment price</h1>
            <div id="apprenticeship-price-hint" class="govuk-hint"> Add the new training and end-point assessment price. The total of these two prices must match the new total price of
                @Model.ApprenticeshipTotalPrice.FormatCurrency()
                <br><br>
                The new total price cannot be approved until you confirm the training and end-point assessment price.<br><br>
            </div>
            
            <form method="post">
            
            <div class="govuk-form-group govuk-!-margin-top-7 @ViewContext.DisplayFormGroupError(nameof(Model.ApprenticeshipTrainingPrice))">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Training price
                    </legend>
                    <div id="apprenticeship-trainingprice-hint" class="govuk-hint">
                        Do not include VAT. Enter price in whole pounds. For example, for £6,500 enter 6500.
                    </div>
                    @Html.ValidationMessageFor(m => m.ApprenticeshipTrainingPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ApprenticeshipTrainingPrice) })
                    <div class="govuk-input__wrapper">
                        <div class="govuk-input__prefix" aria-hidden="true">£</div>
                        @Html.TextBoxFor(m => m.ApprenticeshipTrainingPrice, new { @class = $"govuk-input govuk-input--width-5 {ViewContext.DisplayInputError(nameof(Model.ApprenticeshipTrainingPrice))}", @type = "text", @aria_describedby = "apprenticeship-trainingprice-hint", @inputmode = "numeric", onkeyup = "calculateTotal()" })
                    </div>
                </fieldset>
            </div>

            <div class="govuk-form-group @ViewContext.DisplayFormGroupError(nameof(Model.ApprenticeshipEndPointAssessmentPrice))">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        End-point assessment price
                    </legend>
                    <div id="apprenticeship-assessmentprice-hint" class="govuk-hint">
                        Do not include VAT. Enter price in whole pounds. For example, for £1,500 enter 1500.
                    </div>
                    @Html.ValidationMessageFor(m => m.ApprenticeshipEndPointAssessmentPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ApprenticeshipEndPointAssessmentPrice) })
                    <div class="govuk-input__wrapper">
                        <div class="govuk-input__prefix" aria-hidden="true">£</div>
                        @Html.TextBoxFor(m => m.ApprenticeshipEndPointAssessmentPrice, new { @class = $"govuk-input govuk-input--width-5 {ViewContext.DisplayInputError(nameof(Model.ApprenticeshipEndPointAssessmentPrice))}", @type = "text", @aria_describedby = "apprenticeship-assessmentprice-hint", @inputmode = "numeric", onkeyup = "calculateTotal()" })
                    </div>
                </fieldset>
                
                <div class="govuk-inset-text">
                    <div id="price-hint" class="govuk-hint">
                        The employer has changed the total price to: @(Model.ApprenticeshipTotalPrice.FormatCurrency())
                    </div>
                </div>
            </div>

            
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m=> m.ApprenticeshipKey)
                @Html.HiddenFor(m => m.ApprenticeshipTotalPrice)
                <button class="govuk-button" data-module="govuk-button" type="submit" id="buttonSubmitForm">
                    Save
                </button>
            </form>
		</div>
	</div>
</div>