@using SFA.DAS.Apprenticeships.Web.Models.ChangeOfPrice
@model ProviderChangeOfPriceModel
@{
    ViewData["Title"] = "Change the training price and/or the end-point assessment price - Manage apprenticeships";
}

@section Scripts {
    <script src="/js/CreatePriceChangeRequest.js" no-cdn></script>
}

<div class="govuk-width-container ">

    @*Renders href as href="https://approvals.{domain}/{ProviderReferenceNumber}/apprentices/{ApprenticeshipHashedId}" *@
    <a class="govuk-back-link" asp-external-subdomain="approvals" asp-external-id="@Model.ProviderReferenceNumber" asp-external-controller="apprentices" asp-external-action="@Model.ApprenticeshipHashedId">
        Back
    </a>

    @await Html.PartialAsync("_validationSummary")

    <main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">

        <form method="post" action="/provider/@Model.ProviderReferenceNumber/ChangeOfPrice/@Model.ApprenticeshipHashedId">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m=> m.CacheKey)
            @Html.HiddenFor(m=> m.ApprenticeshipKey)
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">

                    <h1 class="govuk-heading-l">Change the negotiated prices</h1>

                    <div id="apprenticeship-price-hint" class="govuk-hint">
                        <strong>The maximum funding for this apprenticeship is @Model.FundingBandMaximum.FormatCurrency().</strong> This is the most the apprenticeship service will pay. If the total price is over this limit, the employer must pay the difference.
                    </div>

                    <details class="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                What to do if you don't know the end-point assessment price
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            If you haven't selected an end-point assessment organisation (EPAO) or finalised the contract, you can enter a nominal value of £1 for the end-point assessment.
                            <br /><br />
                            Adjust the training price to reflect this. For example, if training costs £9,000, enter £8,999 for training and £1 for the end-point assessment.
                            <br /><br />
                            You can update both prices during the apprenticeship once the end-point assessment price is confirmed.
                            <br /><br />
                            Any increase in the total price will need employer approval.
                        </div>
                    </details>

                    <div class="govuk-form-group govuk-!-margin-top-7 @ViewContext.DisplayFormGroupError(nameof(Model.ApprenticeshipTrainingPrice))">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                Training price
                            </legend>
                            <div id="apprenticeship-trainingprice-hint" class="govuk-hint">
                                Do not include VAT. Enter price in whole pounds. For example, for £6,500 enter 6500.
                            </div>
                            @Html.ValidationMessageFor(m => m.ApprenticeshipTrainingPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ApprenticeshipTrainingPrice) })
                            <div class="govuk-input__wrapper">
                                <div class="govuk-input__prefix" aria-hidden="true">£</div>
                                @Html.TextBoxFor(m => m.ApprenticeshipTrainingPrice, new { @class = $"govuk-input govuk-input--width-5 {ViewContext.DisplayInputError(nameof(Model.ApprenticeshipTrainingPrice))}", @type = "text", @aria_describedby = "apprenticeship-trainingprice-hint", @inputmode = "numeric", onkeyup="calculateTotal()"})
                            </div>
                        </fieldset>
                    </div>

                    <div class="govuk-form-group @ViewContext.DisplayFormGroupError(nameof(Model.ApprenticeshipEndPointAssessmentPrice))">
                        <fieldset class="govuk-fieldset">
                            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                End-point assessment price
                            </legend>
                            <div id="apprenticeship-assessmentprice-hint" class="govuk-hint">
                                Do not include VAT. Enter price in whole pounds. For example, for £2,500 enter 2500.
                            </div>
                            @Html.ValidationMessageFor(m => m.ApprenticeshipEndPointAssessmentPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.ApprenticeshipEndPointAssessmentPrice) })
                            <div class="govuk-input__wrapper">
                                <div class="govuk-input__prefix" aria-hidden="true">£</div>
                                @Html.TextBoxFor(m => m.ApprenticeshipEndPointAssessmentPrice, new { @class = $"govuk-input govuk-input--width-5 {ViewContext.DisplayInputError(nameof(Model.ApprenticeshipEndPointAssessmentPrice))}", @type = "text", @aria_describedby = "apprenticeship-assessmentprice-hint", @inputmode = "numeric", onkeyup="calculateTotal()" })
                            </div>
                        </fieldset>

                        <div class="govuk-inset-text" js-enabled-show hidden>
                            The total price the employer will see is:
                            <div class="@ViewContext.StyleAsError(nameof(Model.ApprenticeshipTotalPrice))" id="ApprenticeshipTotalPrice" name="ApprenticeshipTotalPrice">@((Model.ApprenticeshipTotalPrice).FormatCurrency())</div>
                        </div>
                    </div>

                    @await Html.PartialAsync("~/Views/ChangeOfPrice/_effectiveFromDate.cshtml", Model)

                    @await Html.PartialAsync("~/Views/ChangeOfPrice/_reasonForPriceChange.cshtml", Model)

                </div>

            </div>
            <button class="govuk-button" data-module="govuk-button" type="submit" id="buttonSubmitForm">
                Continue
            </button>

        </form>
    </main>
</div>